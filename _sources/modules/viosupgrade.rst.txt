.. _viosupgrade_module:


viosupgrade -- Upgrades the Virtual I/O Server
==============================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

Performs the operations of backing up the virtual and logical configuration data, installing the specified image, and restoring the virtual and logical configuration data of the Virtual I/O Server (VIOS).



Requirements
------------
The below requirements are needed on the host that executes this module.

- VIOS >= 2.2.6.30



Parameters
----------

  image_file (True, str, None)
    Specifies the image file that must be used for the installation on an alternative disk.


  mksysb_install_disks (True, list, None)
    Specifies the alternative disks to install the available VIOS image.

    The current ``rootvg`` disk on the VIOS partition is not impacted by this installation. The VIOS partition remains in the running state during the installation of the alternative disk.

    The size of the target disks must be greater than or equal to 30G.

    The disks that are specified must not be in use.


  filename (optional, str, None)
    Specifies the file that contains the list of files that need to be backed up from the current system and saved in the new VIOS installed image. Each line must contain a single filename along with its path. Multiple files must be specified in separate new lines.

    The files are copied to the respective directories in the newly installed rootvg disks.


  cluster (optional, bool, None)
    Specifies that cluster-level backup and restore operations are performed. Mandatory for a VIOS that is part of an SSP cluster.

    If not set, cluster membership is determined automatically.


  timeout (optional, int, 60)
    Specifies the timeout (in minutes) to wait for the upgrade to complete.


  post_install_binary (optional, str, None)
    Specifies a binary to execute after the restore process of the VIOS metadata configuration is successful.


  skipclusterstate (optional, bool, False)
    Skips the verification of the SSP cluster state, so that the installation can be triggered on multiple VIOS nodes simultaneously.

    You must ensure that all the SSP cluster nodes are not in ``DOWN`` state at the same time as this can bring down the SSP cluster completely.


  wait_reboot (optional, bool, True)
    Waits for the system to reboot and for the upgrade to complete.

    Only usable when the remote user is root and the transport is ssh with public key authentication.

    Copies SSH host identification and root user SSH authorized_keys file to the newly installed rootvg disks.





Notes
-----

.. note::
   - The level of the target mksysb image must be at version 3.1.0.00, or later.
   - Installations through this module are of the type New and Complete installation. Any customized configurations that might exist on the currently running system before the installation starts (including the timezone), are not included in the new installation image.
   - If the ``altinst_rootvg`` or ``old_rootvg`` disks are already available in the VIOS, you must rename them.
   - This module does not require Python to be installed on the target VIOS.




Examples
--------

.. code-block:: yaml+jinja

    
    - name: Perform the VIOS upgrade operation on new rootvg disks hdisk1 and hdisk2
      viosupgrade:
        image_file: mymksysbA
        mksysb_install_disks: [hdisk1,hdisk2]

    - name: Upgrade the VIOS that belongs to an SSP cluster
      viosupgrade:
        image_file: mymksysbA
        mksysb_install_disks: [hdisk1,hdisk2]
        cluster: yes

    - name: Copy files from the current rootvg disk to a newly installed VIOS image
      viosupgrade:
        image_file: mymksysbA
        mksysb_install_disks: [hdisk1,hdisk2]
        filename: file_list_name



Return Values
-------------

msg (always, str, )
  The execution message.


stdout (always, str, )
  The standard output


stderr (always, str, )
  The standard error


old_rootvg (always, list, ['hdisk0'])
  The list of disks that are part of the old_rootvg after the upgrade


ioslevel (always, dict, {'ioslevel': {'before': '3.1.0.00', 'after': '3.1.1.00'}})
  The installed maintenance level of the system before and after the upgrade


  before (always, str, )
    The installed maintenance level of the system before the upgrade


  after (success, str, )
    The installed maintenance level of the system after the upgrade






Status
------




- This module is not guaranteed to have a backwards compatible interface. *[preview]*


- This module is maintained by community.



Authors
~~~~~~~

- AIX Development Team (@pbfinley1911)

